<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html>
<html b:version='2' class='v2' expr:dir='data:blog.languageDirection' xmlns='http://www.w3.org/1999/xhtml' xmlns:b='http://www.google.com/2005/gml/b' xmlns:data='http://www.google.com/2005/gml/data' xmlns:expr='http://www.google.com/2005/gml/expr'>
<head>
  <!-- Meta Tags untuk SEO -->
  <meta charset='UTF-8'/>
  <meta content='width=device-width, initial-scale=1.0' name='viewport'/>
  <meta expr:content='data:blog.pageTitle + " - Baca novel terjemahan danmei BL Tiongkok"' name='description'/>
  <meta content='novel danmei, terjemahan danmei, BL Tiongkok, novel BL, romansa pria, fiksi Tiongkok' name='keywords'/>
  <meta content='Nama Anda' name='author'/>
  <meta content='index, follow' name='robots'/>
  <!-- Open Graph -->
  <meta expr:content='data:blog.pageTitle' property='og:title'/>
  <meta expr:content='data:blog.metaDescription' property='og:description'/>
  <meta expr:content='data:post.thumbnail' property='og:image' expr:condition='data:post.thumbnail'/>
  <meta content='URL_GAMBAR_DEFAULT' property='og:image' expr:condition='!data:post.thumbnail'/>
  <meta expr:content='data:blog.canonicalUrl' property='og:url'/>
  <meta content='article' property='og:type'/>
  <!-- Twitter Card -->
  <meta content='summary_large_image' name='twitter:card'/>
  <meta expr:content='data:blog.pageTitle' name='twitter:title'/>
  <meta expr:content='data:blog.metaDescription' name='twitter:description'/>
  <meta expr:content='data:post.thumbnail' name='twitter:image' expr:condition='data:post.thumbnail'/>
  <meta content='URL_GAMBAR_DEFAULT' name='twitter:image' expr:condition='!data:post.thumbnail'/>
  <!-- Schema Markup -->
  <script type='application/ld+json'>
    {
      "@context": "https://schema.org",
      "@type": "Article",
      "headline": "<data:blog.pageTitle/>",
      "image": "<data:post.thumbnail ? data:post.thumbnail : 'URL_GAMBAR_DEFAULT'/>",
      "datePublished": "<data:post.timestampISO8601/>",
      "author": {
        "@type": "Person",
        "name": "Nama Anda"
      },
      "publisher": {
        "@type": "Organization",
        "name": "<data:blog.title/>",
        "logo": {
          "@type": "ImageObject",
          "url": "<data:blog.logo/>"
        }
      }
    }
  </script>
  <!-- Favicon -->
  <link expr:href='data:blog.favicon' rel='icon' type='image/x-icon'/>
  <!-- Google Fonts -->
  <link href='https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&family=Open+Sans:wght@400;600&display=swap' rel='stylesheet'/>
  <!-- Font Awesome untuk ikon -->
  <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css'/>
  <!-- CSS -->
  <b:skin><![CDATA[
    /* Reset CSS */
    * { margin: 0; padding: 0; box-sizing: border-box; }
    body {
      font-family: 'Open Sans', sans-serif;
      background: #f5f5f5;
      color: #333;
      line-height: 1.6;
      font-size: 16px;
      transition: background 0.3s, color 0.3s;
    }
    body.dark-mode {
      background: #1a1a1a;
      color: #e0e0e0;
    }
    /* Header */
    .header {
      background: #8B4513; /* Cokelat seperti contoh */
      color: #fff;
      padding: 10px 20px;
      display: flex;
      align-items: center;
      justify-content: space-between;
      position: sticky;
      top: 0;
      z-index: 1000;
      box-shadow: 0 2px 5px rgba(0,0,0,0.2);
    }
    .header .logo {
      font-family: 'Roboto', sans-serif;
      font-size: 24px;
      font-weight: 700;
      color: #D3D3D3; /* Abu-abu terang */
      text-align: center;
      flex: 1;
    }
    .header .nav-toggle {
      font-size: 24px;
      background: none;
      border: none;
      color: #fff;
      cursor: pointer;
      padding: 5px;
    }
    .header .nav-toggle i {
      font-size: 24px;
    }
    .header .controls {
      display: flex;
      align-items: center;
      gap: 10px;
    }
    .header .controls .dark-mode-toggle,
    .header .controls .search-btn {
      background: none;
      border: none;
      color: #fff;
      cursor: pointer;
      font-size: 20px;
      padding: 5px;
    }
    .header .controls .dark-mode-toggle i {
      font-size: 20px;
    }
    .header .controls .search-btn i {
      font-size: 20px;
    }
    /* Navbar Dropdown */
    .navbar {
      display: none;
      position: absolute;
      top: 60px;
      left: 0;
      width: 200px;
      background: #8B4513;
      box-shadow: 0 2px 5px rgba(0,0,0,0.2);
      border-radius: 5px;
      z-index: 1000;
    }
    .navbar.active {
      display: block;
    }
    .navbar ul {
      list-style: none;
      padding: 10px 0;
    }
    .navbar ul li {
      padding: 10px 20px;
    }
    .navbar ul li a {
      color: #fff;
      text-decoration: none;
      font-family: 'Roboto', sans-serif;
      font-size: 16px;
      display: block;
    }
    .navbar ul li a:hover {
      background: #A0522D;
      color: #fff;
    }
    /* Container */
    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 20px;
      display: flex;
      flex-wrap: wrap;
      gap: 20px;
    }
    .main-content {
      flex: 1;
      min-width: 0;
      background: #fff;
      padding: 25px;
      box-shadow: 0 2px 5px rgba(0,0,0,0.1);
      border-radius: 5px;
    }
    body.dark-mode .main-content {
      background: #2a2a2a;
      box-shadow: 0 2px 5px rgba(255,255,255,0.1);
    }
    .sidebar {
      width: 300px;
      padding: 20px;
      background: #fff;
      box-shadow: 0 2px 5px rgba(0,0,0,0.1);
      border-radius: 5px;
    }
    body.dark-mode .sidebar {
      background: #2a2a2a;
      box-shadow: 0 2px 5px rgba(255,255,255,0.1);
    }
    /* Detail Series */
    .series-detail {
      display: flex;
      gap: 20px;
    }
    .series-detail img {
      width: 150px;
      height: 200px;
      object-fit: cover;
      border-radius: 5px;
    }
    .series-detail .content {
      flex: 1;
    }
    .series-detail h1 {
      font-family: 'Roboto', sans-serif;
      font-size: 24px;
      margin-bottom: 15px;
      color: #333;
    }
    body.dark-mode .series-detail h1 {
      color: #e0e0e0;
    }
    .series-detail .genre {
      font-size: 14px;
      color: #888;
      margin-bottom: 15px;
    }
    body.dark-mode .series-detail .genre {
      color: #aaa;
    }
    .series-detail .synopsis {
      font-size: 16px;
      margin-bottom: 15px;
    }
    .series-detail .stats {
      font-size: 14px;
      color: #666;
      margin-bottom: 15px;
    }
    body.dark-mode .series-detail .stats {
      color: #bbb;
    }
    .series-detail .donate-btn {
      background: #ff9900;
      color: #fff;
      padding: 10px 20px;
      border: none;
      border-radius: 5px;
      text-decoration: none;
      display: inline-block;
      font-size: 14px;
    }
    .series-detail .donate-btn:hover {
      background: #e68a00;
    }
    /* Related Stories */
    .related-stories {
      margin-top: 20px;
    }
    .related-stories h2 {
      font-family: 'Roboto', sans-serif;
      font-size: 20px;
      margin-bottom: 10px;
      color: #333;
    }
    body.dark-mode .related-stories h2 {
      color: #e0e0e0;
    }
    .related-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
      gap: 15px;
    }
    .related-card {
      background: #f9f9f9;
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 5px;
      text-align: center;
    }
    body.dark-mode .related-card {
      background: #333;
      border-color: #444;
    }
    .related-card img {
      width: 100%;
      height: 150px;
      object-fit: cover;
      border-radius: 3px;
      margin-bottom: 10px;
    }
    .related-card a {
      color: #333;
      text-decoration: none;
      font-size: 14px;
    }
    body.dark-mode .related-card a {
      color: #e0e0e0;
    }
    .related-card a:hover {
      color: #007bff;
    }
    /* Reading and Bookmark Buttons */
    .action-buttons {
      margin-top: 15px;
      display: flex;
      gap: 10px;
    }
    .reading-btn, .bookmark-btn {
      background: #007bff;
      color: #fff;
      padding: 10px 20px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-size: 14px;
    }
    .reading-btn:hover, .bookmark-btn:hover {
      background: #0056b3;
    }
    .reading-btn.reading, .bookmark-btn.bookmarked {
      background: #28a745;
    }
    .reading-btn.reading:hover, .bookmark-btn.bookmarked:hover {
      background: #218838;
    }
    /* Reading History */
    .reading-history {
      margin: 20px 0;
      padding: 15px;
      background: #f9f9f9;
      border: 1px solid #ddd;
      border-radius: 5px;
    }
    body.dark-mode .reading-history {
      background: #333;
      border-color: #444;
    }
    .reading-history h2 {
      font-family: 'Roboto', sans-serif;
      font-size: 18px;
      margin-bottom: 10px;
      color: #333;
    }
    body.dark-mode .reading-history h2 {
      color: #e0e0e0;
    }
    .reading-history p {
      font-size: 14px;
      color: #666;
    }
    body.dark-mode .reading-history p {
      color: #bbb;
    }
    .reading-history a {
      color: #007bff;
      text-decoration: none;
    }
    .reading-history a:hover {
      text-decoration: underline;
    }
    /* Chapter List */
    .chapter-list {
      margin-top: 20px;
    }
    .chapter-list h2 {
      font-family: 'Roboto', sans-serif;
      font-size: 20px;
      margin-bottom: 10px;
      color: #333;
    }
    body.dark-mode .chapter-list h2 {
      color: #e0e0e0;
    }
    .chapter-list ul {
      list-style: none;
    }
    .chapter-list ul li {
      padding: 8px 0;
      border-bottom: 1px solid #ddd;
    }
    body.dark-mode .chapter-list ul li {
      border-bottom: 1px solid #444;
    }
    .chapter-list ul li a {
      color: #007bff;
      text-decoration: none;
      font-size: 14px;
    }
    .chapter-list ul li a:hover {
      text-decoration: underline;
    }
    .chapter-list .show-more {
      display: inline-block;
      margin-top: 10px;
      padding: 8px 15px;
      background: #007bff;
      color: #fff;
      text-decoration: none;
      border-radius: 3px;
    }
    .chapter-list .show-more:hover {
      background: #0056b3;
    }
    /* Chapter Page */
    .chapter-content {
      margin: 20px 0;
    }
    .chapter-content h1 {
      font-family: 'Roboto', sans-serif;
      font-size: 24px;
      margin-bottom: 15px;
      color: #333;
    }
    body.dark-mode .chapter-content h1 {
      color: #e0e0e0;
    }
    .chapter-content .chapter-body {
      font-size: 16px;
      line-height: 1.8;
      margin-bottom: 20px;
    }
    .chapter-navigation {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
      gap: 10px;
    }
    .chapter-navigation a, .chapter-navigation select {
      padding: 8px 15px;
      background: #007bff;
      color: #fff;
      border: none;
      border-radius: 5px;
      text-decoration: none;
      font-size: 14px;
      cursor: pointer;
    }
    .chapter-navigation a:hover, .chapter-navigation select:hover {
      background: #0056b3;
    }
    .chapter-navigation a.disabled {
      background: #ccc;
      cursor: not-allowed;
    }
    .chapter-navigation select {
      background: #007bff;
      color: #fff;
      border: none;
      border-radius: 5px;
      font-size: 14px;
      padding: 8px;
      max-width: 200px;
    }
    /* Comments Section */
    .comments-section {
      margin-top: 30px;
    }
    .comments-section h2 {
      font-family: 'Roboto', sans-serif;
      font-size: 20px;
      margin-bottom: 15px;
      color: #333;
    }
    body.dark-mode .comments-section h2 {
      color: #e0e0e0;
    }
    #disqus_thread {
      margin-top: 20px;
    }
    /* Bookmark Page */
    .bookmark-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 20px;
      min-height: 0;
    }
    .bookmark-card {
      background: #fff;
      padding: 15px;
      border: 1px solid #ddd;
      border-radius: 5px;
      box-shadow: 0 2px 5px rgba(0,0,0,0.1);
      display: flex;
      align-items: center;
      transition: transform 0.2s ease, box-shadow 0.2s ease;
    }
    body.dark-mode .bookmark-card {
      background: #333;
      border-color: #444;
      box-shadow: 0 2px 5px rgba(255,255,255,0.1);
    }
    .bookmark-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 4px 10px rgba(0,0,0,0.15);
    }
    body.dark-mode .bookmark-card:hover {
      box-shadow: 0 4px 10px rgba(255,255,255,0.15);
    }
    .bookmark-card img {
      width: 100px;
      height: 150px;
      object-fit: cover;
      margin-right: 15px;
      border-radius: 3px;
    }
    .bookmark-card .card-content {
      flex: 1;
      text-align: left;
    }
    .bookmark-card h2 {
      font-family: 'Roboto', sans-serif;
      font-size: 18px;
      margin: 0 0 8px;
      line-height: 1.4;
      color: #333;
    }
    body.dark-mode .bookmark-card h2 {
      color: #e0e0e0;
    }
    .bookmark-card .remove-btn {
      background: #dc3545;
      color: #fff;
      padding: 5px 10px;
      border: none;
      border-radius: 3px;
      cursor: pointer;
      font-size: 12px;
    }
    .bookmark-card .remove-btn:hover {
      background: #c82333;
    }
    /* Advanced Search Page */
    .advanced-search {
      margin-bottom: 20px;
      padding: 20px;
      background: #f9f9f9;
      border: 1px solid #ddd;
      border-radius: 5px;
    }
    body.dark-mode .advanced-search {
      background: #333;
      border-color: #444;
    }
    .advanced-search h2 {
      font-family: 'Roboto', sans-serif;
      font-size: 20px;
      margin-bottom: 15px;
      color: #333;
    }
    body.dark-mode .advanced-search h2 {
      color: #e0e0e0;
    }
    .advanced-search form {
      display: flex;
      flex-wrap: wrap;
      gap: 15px;
      align-items: center;
    }
    .advanced-search label {
      font-size: 14px;
      color: #333;
    }
    body.dark-mode .advanced-search label {
      color: #e0e0e0;
    }
    .advanced-search input[type="text"],
    .advanced-search select {
      padding: 8px;
      border: 1px solid #ddd;
      border-radius: 3px;
      font-size: 14px;
      width: 200px;
      background: #fff;
      color: #333;
    }
    body.dark-mode .advanced-search input[type="text"],
    body.dark-mode .advanced-search select {
      background: #444;
      border-color: #555;
      color: #e0e0e0;
    }
    .advanced-search button {
      padding: 8px 20px;
      background: #007bff;
      color: #fff;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-size: 14px;
    }
    .advanced-search button:hover {
      background: #0056b3;
    }
    /* Search Results */
    .search-results {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 20px;
    }
    .search-result-card {
      background: #fff;
      padding: 15px;
      border: 1px solid #ddd;
      border-radius: 5px;
      box-shadow: 0 2px 5px rgba(0,0,0,0.1);
      display: flex;
      align-items: center;
      transition: transform 0.2s ease, box-shadow 0.2s ease;
    }
    body.dark-mode .search-result-card {
      background: #333;
      border-color: #444;
      box-shadow: 0 2px 5px rgba(255,255,255,0.1);
    }
    .search-result-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 4px 10px rgba(0,0,0,0.15);
    }
    body.dark-mode .search-result-card:hover {
      box-shadow: 0 4px 10px rgba(255,255,255,0.15);
    }
    .search-result-card img {
      width: 100px;
      height: 150px;
      object-fit: cover;
      margin-right: 15px;
      border-radius: 3px;
    }
    .search-result-card .card-content {
      flex: 1;
    }
    .search-result-card h3 {
      font-family: 'Roboto', sans-serif;
      font-size: 18px;
      margin: 0 0 8px;
      color: #333;
    }
    body.dark-mode .search-result-card h3 {
      color: #e0e0e0;
    }
    .search-result-card p {
      font-size: 14px;
      color: #666;
      margin: 0 0 5px;
    }
    body.dark-mode .search-result-card p {
      color: #bbb;
    }
    .search-result-card a {
      color: #007bff;
      text-decoration: none;
    }
    .search-result-card a:hover {
      text-decoration: underline;
    }
    /* Responsive Design */
    @media (max-width: 768px) {
      .series-detail { flex-direction: column; }
      .series-detail img { width: 100%; height: auto; margin-bottom: 15px; }
      .container { flex-direction: column; }
      .main-content, .sidebar { width: 100%; margin-bottom: 20px; }
      .navbar { width: 150px; }
    }
    @media (max-width: 480px) {
      .header .logo { font-size: 20px; }
      .header .nav-toggle i { font-size: 20px; }
      .header .controls .dark-mode-toggle i,
      .header .controls .search-btn i { font-size: 18px; }
      .navbar { width: 120px; }
      .series-detail h1 { font-size: 20px; }
      .series-detail .synopsis { font-size: 14px; }
      .chapter-content h1 { font-size: 20px; }
      .chapter-content .chapter-body { font-size: 14px; }
      .search-result-card img { width: 80px; height: 120px; }
      .search-result-card h3 { font-size: 16px; }
    }
  ]]></b:skin>
</head>
<body>
  <!-- Header -->
  <div class='header'>
    <button class='nav-toggle' onclick='toggleNavbar()'><i class="fas fa-bars"></i></button>
    <div class='logo'>KOMIKA</div>
    <div class='controls'>
      <button class='dark-mode-toggle' onclick='toggleDarkMode()'><i class="fas fa-cog"></i></button>
      <button class='search-btn' onclick='toggleSearch()'><i class="fas fa-search"></i></button>
    </div>
    <div class='navbar' id='navbar'>
      <ul>
        <li><a expr:href='data:blog.homepageUrl'>Beranda</a></li>
        <li class='dropdown'>
          <a href='#'>Kategori Danmei</a>
          <div class='dropdown-content'>
            <a href='/search/label/Historical'>Historical</a>
            <a href='/search/label/Xianxia'>Xianxia</a>
            <a href='/search/label/Modern'>Modern</a>
          </div>
        </li>
        <li><a href='/p/pencarian.html'>Pencarian</a></li>
        <li><a href='/p/bookmarks.html'>Bookmarks</a></li>
        <li><a href='/p/tentang.html'>Tentang</a></li>
        <li><a href='/p/kontak.html'>Kontak</a></li>
      </ul>
    </div>
  </div>
  <!-- Container -->
  <div class='container'>
    <div class='main-content'>
      <b:section class='main' id='main' showaddelement='yes'>
        <b:widget id='Blog1' locked='true' title='Blog Posts' type='Blog'>
          <b:includable id='main'>
            <b:if cond='data:blog.url == data:blog.homepageUrl + "p/pencarian.html"'>
              <!-- Halaman Pencarian Lanjutan -->
              <div class='advanced-search'>
                <h2>Pencarian Lanjutan</h2>
                <form id='advancedSearchForm'>
                  <div>
                    <label for='searchTitle'>Judul:</label>
                    <input type='text' id='searchTitle' placeholder='Masukkan judul...'/>
                  </div>
                  <div>
                    <label for='searchGenre'>Genre:</label>
                    <select id='searchGenre'>
                      <option value=''>Semua Genre</option>
                      <option value='Historical'>Historical</option>
                      <option value='Xianxia'>Xianxia</option>
                      <option value='Modern'>Modern</option>
                      <option value='Romance'>Romance</option>
                    </select>
                  </div>
                  <div>
                    <label for='searchStatus'>Status:</label>
                    <select id='searchStatus'>
                      <option value=''>Semua Status</option>
                      <option value='Ongoing'>Ongoing</option>
                      <option value='Completed'>Completed</option>
                    </select>
                  </div>
                  <div>
                    <label for='searchYear'>Tahun Rilis:</label>
                    <select id='searchYear'>
                      <option value=''>Semua Tahun</option>
                      <option value='2025'>2025</option>
                      <option value='2024'>2024</option>
                      <option value='2023'>2023</option>
                    </select>
                  </div>
                  <button type='submit'>Cari</button>
                </form>
              </div>
              <div class='search-results' id='searchResults'>
                <!-- Hasil pencarian akan ditampilkan di sini -->
              </div>
            <b:elseif cond='data:blog.url == data:blog.homepageUrl + "p/bookmarks.html"'>
              <!-- Halaman Bookmarks -->
              <div class='section-title'>Bookmarks</div>
              <div class='bookmark-grid' id='bookmarkGrid'></div>
            <b:elseif cond='data:blog.pageType == "item" and data:blog.labels any (l => l.name startsWith "Chapter ")'>
              <!-- Halaman Chapter -->
              <div class='chapter-content'>
                <h1><data:blog.postTitle/></h1>
                <div class='chapter-navigation'>
                  <a id='prevChapter' href='#' class='disabled'>Previous Chapter</a>
                  <select id='chapterSelect' onchange='window.location.href=this.value'>
                    <!-- Options will be populated by JavaScript -->
                  </select>
                  <a id='nextChapter' href='#' class='disabled'>Next Chapter</a>
                </div>
                <div class='chapter-body'>
                  <data:post.body/>
                </div>
              </div>
              <!-- Related Stories -->
              <div class='related-stories'>
                <h2>Related Stories</h2>
                <div class='related-grid'>
                  <b:loop values='data:posts' var='post' index='i'>
                    <b:if cond='data:i < 3'>
                      <div class='related-card'>
                        <b:if cond='data:post.thumbnail'>
                          <img expr:alt='data:post.title' expr:src='data:post.thumbnail'/>
                        <b:else/>
                          <img alt='No Image' src='URL_GAMBAR_DEFAULT'/>
                        </b:if>
                        <a expr:href='data:post.url'><data:post.title/></a>
                      </div>
                    </b:if>
                  </b:loop>
                </div>
              </div>
              <!-- Reading and Bookmark Buttons -->
              <div class='action-buttons'>
                <button class='reading-btn' expr:data-post-id='data:post.id' expr:data-post-title='data:post.title' expr:data-post-url='data:post.url' expr:data-post-image='data:post.thumbnail ? data:post.thumbnail : "URL_GAMBAR_DEFAULT"' onclick='toggleReading(this)'>Add to Reading</button>
                <button class='bookmark-btn' expr:data-post-id='data:post.id' expr:data-post-title='data:post.title' expr:data-post-url='data:post.url' expr:data-post-image='data:post.thumbnail ? data:post.thumbnail : "URL_GAMBAR_DEFAULT"' onclick='toggleBookmark(this)'>Bookmark</button>
              </div>
              <!-- Disqus Comments -->
              <div class='comments-section'>
                <h2>Latest Comments</h2>
                <div id='disqus_thread'/>
              </div>
            <b:elseif cond='data:blog.pageType == "item"'/>
              <!-- Detail Series -->
              <div class='series-detail'>
                <b:if cond='data:post.thumbnail'>
                  <img expr:alt='data:post.title' expr:src='data:post.thumbnail'/>
                <b:else/>
                  <img alt='No Image' src='URL_GAMBAR_DEFAULT'/>
                </b:if>
                <div class='content'>
                  <h1><data:blog.postTitle/></h1>
                  <div class='genre'>Historical · Romance</div>
                  <div class='synopsis'><data:post.body/></div>
                  <div class='stats'>30 Chapters · 76.1K · May 8, '25 · Ongoing</div>
                  <a class='donate-btn' href='https://www.buymeacoffee.com' target='_blank'>Buy me a coffee</a>
                </div>
              </div>
              <!-- Related Stories -->
              <div class='related-stories'>
                <h2>Related Stories</h2>
                <div class='related-grid'>
                  <b:loop values='data:posts' var='post' index='i'>
                    <b:if cond='data:i < 3'>
                      <div class='related-card'>
                        <b:if cond='data:post.thumbnail'>
                          <img expr:alt='data:post.title' expr:src='data:post.thumbnail'/>
                        <b:else/>
                          <img alt='No Image' src='URL_GAMBAR_DEFAULT'/>
                        </b:if>
                        <a expr:href='data:post.url'><data:post.title/></a>
                      </div>
                    </b:if>
                  </b:loop>
                </div>
              </div>
              <!-- Reading and Bookmark Buttons -->
              <div class='action-buttons'>
                <button class='reading-btn' expr:data-post-id='data:post.id' expr:data-post-title='data:post.title' expr:data-post-url='data:post.url' expr:data-post-image='data:post.thumbnail ? data:post.thumbnail : "URL_GAMBAR_DEFAULT"' onclick='toggleReading(this)'>Add to Reading</button>
                <button class='bookmark-btn' expr:data-post-id='data:post.id' expr:data-post-title='data:post.title' expr:data-post-url='data:post.url' expr:data-post-image='data:post.thumbnail ? data:post.thumbnail : "URL_GAMBAR_DEFAULT"' onclick='toggleBookmark(this)'>Bookmark</button>
              </div>
              <!-- Reading History -->
              <div class='reading-history' id='readingHistory'>
                <h2>Reading History</h2>
                <p id='lastReadChapter'>Belum ada chapter yang dibaca.</p>
              </div>
              <!-- Chapter List -->
              <div class='chapter-list'>
                <h2>30 Chapters</h2>
                <ul>
                  <b:loop values='data:post.labels' var='label'>
                    <li><a expr:href='data:label.url' expr:data-chapter-name='"Chapter " + data:label.name + " - 1,290 Words"' expr:data-post-id='data:post.id' expr:data-post-title='data:post.title' expr:data-post-url='data:post.url' onclick='updateReadingHistory(this)'>Chapter <data:label.name/> - 1,290 Words</a></li>
                  </b:loop>
                  <li><a class='show-more' href='#'>Show more</a></li>
                </ul>
              </div>
              <!-- Disqus Comments -->
              <div class='comments-section'>
                <h2>Latest Comments</h2>
                <div id='disqus_thread'/>
              </div>
            <b:else/>
              <!-- Daftar Posting (untuk halaman utama) -->
              <div class='section-title'>NEW SERIES</div>
              <div class='post-grid'>
                <b:loop values='data:posts' var='post'>
                  <div class='post-card'>
                    <b:if cond='data:post.thumbnail'>
                      <img expr:alt='data:post.title' expr:data-src='data:post.thumbnail'/>
                    <b:else/>
                      <img alt='No Image' data-src='URL_GAMBAR_DEFAULT'/>
                    </b:if>
                    <div class='card-content'>
                      <h2><a expr:href='data:post.url' expr:title='data:post.title'><data:post.title/></a></h2>
                      <p><data:post.snippet/></p>
                      <div class='stats'>
                        <span><b:loop values='data:post.labels' var='label'><a expr:href='data:label.url'><data:label.name/></a><b:if cond='data:label.isLast != "true"'>, </b:if></b:loop></span>
                        <span>31 · 76.0K · May 14, '25 · Ongoing</span>
                        <a class='extra-btn' href='#'>E</a>
                      </div>
                    </div>
                  </div>
                </b:loop>
              </div>
              <div class='pagination'>
                <b:if cond='data:olderPageUrl'>
                  <a expr:href='data:olderPageUrl'>Sebelumnya</a>
                </b:if>
                <span>Halaman <data:currentPage/> dari <data:numPages/></span>
                <b:if cond='data:newerPageUrl'>
                  <a expr:href='data:newerPageUrl'>Berikutnya</a>
                </b:if>
              </div>
            </b:if>
          </b:includable>
        </b:widget>
      </b:section>
    </div>
    <div class='sidebar'>
      <b:section class='sidebar' id='sidebar' showaddelement='yes'/>
    </div>
  </div>
  <!-- Footer -->
  <div class='footer'>
    <p>© <data:blog.title/> <script>document.write(new Date().getFullYear());</script>. All Rights Reserved.</p>
    <p>Desain terinspirasi dari <a href='https://www.asianovel.net/'>Asianovel.net</a> dengan izin.</p>
    <p>
      <a href='/p/kontak.html'>Kontak</a> |
      <a href='/p/kebijakan-privasi.html'>Kebijakan Privasi</a> |
      <a href='/p/tos.html'>Syarat & Ketentuan</a>
    </p>
  </div>
  <!-- Scripts -->
  <script><![CDATA[
    // Dark Mode Toggle
    function toggleDarkMode() {
      document.body.classList.toggle('dark-mode');
      localStorage.setItem('darkMode', document.body.classList.contains('dark-mode'));
    }
    // Load Dark Mode Preference
    if (localStorage.getItem('darkMode') === 'true') {
      document.body.classList.add('dark-mode');
    }
    // Toggle Navbar
    function toggleNavbar() {
      const navbar = document.getElementById('navbar');
      navbar.classList.toggle('active');
    }
    // Toggle Search (Placeholder - Anda bisa tambahkan logika pencarian sederhana)
    function toggleSearch() {
      alert('Fitur pencarian akan ditambahkan di sini. Saat ini hanya placeholder.');
      // Tambahkan logika pencarian jika diperlukan
    }
    // Lazy Load Images
    document.addEventListener('DOMContentLoaded', function() {
      const images = document.querySelectorAll('img[data-src]');
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            const img = entry.target;
            img.src = img.dataset.src;
            img.removeAttribute('data-src');
            observer.unobserve(img);
          }
        });
      });
      images.forEach(img => observer.observe(img));
    });
    // Disqus Configuration
    var disqus_config = function () {
      this.page.url = '<data:blog.canonicalUrl/>';
      this.page.identifier = '<data:blog.postId/>';
      this.page.title = '<data:blog.pageTitle/>';
    };
    (function() {
      var d = document, s = d.createElement('script');
      s.src = 'https://eltestyu.disqus.com/embed.js'; // Ganti 'eltestyu' dengan shortname Anda
      s.setAttribute('data-timestamp', +new Date());
      (d.head || d.body).appendChild(s);
    })();
    // Bookmark Functionality
    function toggleBookmark(button) {
      const postId = button.getAttribute('data-post-id');
      const postTitle = button.getAttribute('data-post-title');
      const postUrl = button.getAttribute('data-post-url');
      const postImage = button.getAttribute('data-post-image');
      let bookmarks = JSON.parse(localStorage.getItem('bookmarks')) || [];
      const bookmarkIndex = bookmarks.findIndex(b => b.id === postId);
      if (bookmarkIndex === -1) {
        if (bookmarks.length >= 100) {
          alert('Batas bookmark 100 series telah tercapai. Hapus beberapa series untuk menambahkan yang baru.');
          return;
        }
        bookmarks.push({ id: postId, title: postTitle, url: postUrl, image: postImage });
        button.textContent = 'Bookmarked';
        button.classList.add('bookmarked');
      } else {
        bookmarks.splice(bookmarkIndex, 1);
        button.textContent = 'Bookmark';
        button.classList.remove('bookmarked');
      }
      localStorage.setItem('bookmarks', JSON.stringify(bookmarks));
    }
    // Load Bookmark State on Page Load
    document.addEventListener('DOMContentLoaded', function() {
      const bookmarkButtons = document.querySelectorAll('.bookmark-btn');
      bookmarkButtons.forEach(button => {
        const postId = button.getAttribute('data-post-id');
        const bookmarks = JSON.parse(localStorage.getItem('bookmarks')) || [];
        if (bookmarks.some(b => b.id === postId)) {
          button.textContent = 'Bookmarked';
          button.classList.add('bookmarked');
        }
      });
    });
    // Display Bookmarks on Bookmark Page
    if (window.location.href.includes('/p/bookmarks.html')) {
      document.addEventListener('DOMContentLoaded', function() {
        const bookmarkGrid = document.getElementById('bookmarkGrid');
        const bookmarks = JSON.parse(localStorage.getItem('bookmarks')) || [];
        if (bookmarks.length === 0) {
          bookmarkGrid.innerHTML = '<p>Tidak ada series yang di-bookmark.</p>';
        } else {
          bookmarks.forEach(bookmark => {
            const card = document.createElement('div');
            card.className = 'bookmark-card';
            card.innerHTML = `
              <img src="${bookmark.image}" alt="${bookmark.title}"/>
              <div class="card-content">
                <h2><a href="${bookmark.url}">${bookmark.title}</a></h2>
                <button class="remove-btn" onclick="removeBookmark('${bookmark.id}')">Hapus</button>
              </div>
            `;
            bookmarkGrid.appendChild(card);
          });
        }
      });
    }
    function removeBookmark(postId) {
      let bookmarks = JSON.parse(localStorage.getItem('bookmarks')) || [];
      bookmarks = bookmarks.filter(b => b.id !== postId);
      localStorage.setItem('bookmarks', JSON.stringify(bookmarks));
      location.reload();
    }
    // Reading Functionality
    function toggleReading(button) {
      const postId = button.getAttribute('data-post-id');
      const postTitle = button.getAttribute('data-post-title');
      const postUrl = button.getAttribute('data-post-url');
      const postImage = button.getAttribute('data-post-image');
      let readingList = JSON.parse(localStorage.getItem('readingList')) || [];
      const readingIndex = readingList.findIndex(r => r.id === postId);
      if (readingIndex === -1) {
        readingList.push({ id: postId, title: postTitle, url: postUrl, image: postImage });
        button.textContent = 'Reading';
        button.classList.add('reading');
      } else {
        readingList.splice(readingIndex, 1);
        button.textContent = 'Add to Reading';
        button.classList.remove('reading');
      }
      localStorage.setItem('readingList', JSON.stringify(readingList));
    }
    // Load Reading State on Page Load
    document.addEventListener('DOMContentLoaded', function() {
      const readingButtons = document.querySelectorAll('.reading-btn');
      readingButtons.forEach(button => {
        const postId = button.getAttribute('data-post-id');
        const readingList = JSON.parse(localStorage.getItem('readingList')) || [];
        if (readingList.some(r => r.id === postId)) {
          button.textContent = 'Reading';
          button.classList.add('reading');
        }
      });
    });
    // Reading History Functionality
    function updateReadingHistory(link) {
      const postId = link.getAttribute('data-post-id');
      const postTitle = link.getAttribute('data-post-title');
      const postUrl = link.getAttribute('data-post-url');
      const chapterName = link.getAttribute('data-chapter-name');
      const chapterUrl = link.href;
      let readingHistory = JSON.parse(localStorage.getItem('readingHistory')) || {};
      readingHistory[postId] = {
        title: postTitle,
        url: postUrl,
        lastChapter: chapterName,
        chapterUrl: chapterUrl,
        timestamp: new Date().toISOString()
      };
      localStorage.setItem('readingHistory', JSON.stringify(readingHistory));
    }
    // Display Reading History on Page Load
    document.addEventListener('DOMContentLoaded', function() {
      const readingHistoryDiv = document.getElementById('readingHistory');
      const lastReadChapterP = document.getElementById('lastReadChapter');
      if (readingHistoryDiv && lastReadChapterP) {
        const postId = '<data:post.id/>';
        const readingHistory = JSON.parse(localStorage.getItem('readingHistory')) || {};
        if (readingHistory[postId]) {
          const history = readingHistory[postId];
          lastReadChapterP.innerHTML = `Terakhir dibaca: <a href="${history.chapterUrl}">${history.lastChapter}</a> pada ${new Date(history.timestamp).toLocaleString()}`;
        }
      }
    });
    // Chapter Navigation
    document.addEventListener('DOMContentLoaded', function() {
      const chapters = [];
      let currentChapter = 0;
      const postTitle = '<data:blog.postTitle/>';
      const chapterMatch = postTitle.match(/Chapter (\d+)/);
      if (chapterMatch) {
        currentChapter = parseInt(chapterMatch[1]);
      }
      const chapterSelect = document.getElementById('chapterSelect');
      if (chapterSelect) {
        for (let i = 1; i <= 30; i++) {
          const option = document.createElement('option');
          option.value = `/p/chapter-${i}.html`;
          option.text = `Chapter ${i}`;
          if (i === currentChapter) {
            option.selected = true;
          }
          chapterSelect.appendChild(option);
          chapters.push({ number: i, url: `/p/chapter-${i}.html` });
        }
        const prevChapterLink = document.getElementById('prevChapter');
        const nextChapterLink = document.getElementById('nextChapter');
        if (currentChapter > 1) {
          prevChapterLink.href = chapters[currentChapter - 2].url;
          prevChapterLink.classList.remove('disabled');
        }
        if (currentChapter < chapters.length) {
          nextChapterLink.href = chapters[currentChapter].url;
          nextChapterLink.classList.remove('disabled');
        }
      }
      const chapterData = {
        getAttribute: function(attr) {
          if (attr === 'data-post-id') return '<data:post.id/>';
          if (attr === 'data-post-title') return '<data:blog.postTitle/>';
          if (attr === 'data-post-url') return '<data:blog.canonicalUrl/>';
          if (attr === 'data-chapter-name') return `Chapter ${currentChapter} - 1,290 Words`;
          if (attr === 'href') return window.location.href;
          return '';
        }
      };
      updateReadingHistory(chapterData);
    });
    // Advanced Search Functionality
    if (window.location.href.includes('/p/pencarian.html')) {
      document.addEventListener('DOMContentLoaded', function() {
        const searchForm = document.getElementById('advancedSearchForm');
        const searchResults = document.getElementById('searchResults');
        fetch('<data:blog.homepageUrl/>/feeds/posts/default?alt=json&max-results=999')
          .then(response => response.json())
          .then(data => {
            const posts = data.feed.entry || [];
            const processedPosts = posts.map(post => {
              const title = post.title.$t;
              const url = post.link.find(link => link.rel === 'alternate').href;
              const thumbnail = post.media$thumbnail ? post.media$thumbnail.url : 'URL_GAMBAR_DEFAULT';
              const labels = post.category ? post.category.map(cat => cat.term) : [];
              const published = new Date(post.published.$t);
              const year = published.getFullYear().toString();
              const status = labels.includes('Completed') ? 'Completed' : 'Ongoing';
              const chapterCount = labels.filter(label => label.startsWith('Chapter')).length || 30;
              return {
                title,
                url,
                thumbnail,
                genres: labels.filter(label => ['Historical', 'Xianxia', 'Modern', 'Romance'].includes(label)),
                status,
                year,
                chapterCount
              };
            });
            searchForm.addEventListener('submit', function(e) {
              e.preventDefault();
              const titleQuery = document.getElementById('searchTitle').value.toLowerCase();
              const genreQuery = document.getElementById('searchGenre').value;
              const statusQuery = document.getElementById('searchStatus').value;
              const yearQuery = document.getElementById('searchYear').value;
              const filteredPosts = processedPosts.filter(post => {
                const matchesTitle = titleQuery ? post.title.toLowerCase().includes(titleQuery) : true;
                const matchesGenre = genreQuery ? post.genres.includes(genreQuery) : true;
                const matchesStatus = statusQuery ? post.status === statusQuery : true;
                const matchesYear = yearQuery ? post.year === yearQuery : true;
                return matchesTitle && matchesGenre && matchesStatus && matchesYear;
              });
              searchResults.innerHTML = '';
              if (filteredPosts.length === 0) {
                searchResults.innerHTML = '<p>Tidak ada hasil yang ditemukan.</p>';
              } else {
                filteredPosts.forEach(post => {
                  const card = document.createElement('div');
                  card.className = 'search-result-card';
                  card.innerHTML = `
                    <img src="${post.thumbnail}" alt="${post.title}"/>
                    <div class="card-content">
                      <h3><a href="${post.url}">${post.title}</a></h3>
                      <p>Genre: ${post.genres.join(', ') || 'Tidak ada'}</p>
                      <p>Status: ${post.status}</p>
                      <p>Tahun: ${post.year}</p>
                      <p>Chapters: ${post.chapterCount}</p>
                    </div>
                  `;
                  searchResults.appendChild(card);
                });
              }
            });
          })
          .catch(error => {
            console.error('Error fetching posts:', error);
            searchResults.innerHTML = '<p>Terjadi kesalahan saat memuat data. Silakan coba lagi.</p>';
          });
      });
    }
  ]]></script>
</body>
</html>
